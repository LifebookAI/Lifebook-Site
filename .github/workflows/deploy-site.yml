name: Deploy site

on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: deploy-site-${{ github.ref }}
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  S3_BUCKET: lifebook.ai
  SITE_DIR: dist
  CF_DIST_ID: E2D7FJLA6YQUNP

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install deps
        run: |
          set -euo pipefail
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Lint
        run: npm run lint -- --max-warnings=0

      - name: Type check
        run: npm run typecheck

      - name: Build site
        env:
          # Let Next find CI env and produce optimized output
          CI: "true"
        run: |
          set -euo pipefail
          npm run build
          # If this is a Next.js app, export a static site to $SITE_DIR
          if [ -f package.json ] && grep -q '"next"' package.json; then
            npx --yes next export -o "$SITE_DIR"
          fi
          test -d "$SITE_DIR" || { echo "::error::Build output dir '$SITE_DIR' not found"; exit 1; }
          echo "Exported site to '$SITE_DIR'"

      - name: Configure AWS (OIDC)
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: lifebook-site-deploy

      - name: Sync assets to S3
        run: |
          set -euo pipefail
          # Long-cache immutable assets under _next, static, assets, etc. (best-effort)
          if [ -d "$SITE_DIR/_next" ]; then
            aws s3 sync "$SITE_DIR/_next/" "s3://$S3_BUCKET/_next/" --delete --only-show-errors --cache-control "public,max-age=31536000,immutable" --content-encoding utf-8 || true
          fi
          # Everything else (HTML short cache)
          aws s3 sync "$SITE_DIR/" "s3://$S3_BUCKET/" \
            --delete --only-show-errors \
            --exclude "_next/*" \
            --cache-control "public,max-age=60"
          echo "S3 sync complete."

      - name: Invalidate CloudFront
        run: |
          set -euo pipefail
          if [ -n "${CF_DIST_ID:-}" ]; then
            aws cloudfront create-invalidation --distribution-id "$CF_DIST_ID" --paths "/*" 1>/dev/null
            echo "Invalidation requested."
          else
            echo "CF_DIST_ID not set; skipping invalidation."
          fi

