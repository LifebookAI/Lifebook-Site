name: Deploy site (S3 + CloudFront)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "site/**"
      - ".github/workflows/deploy-site.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "site/**"
      - ".github/workflows/deploy-site.yml"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  S3_BUCKET: lifebook.ai
  CF_DIST_ID: ${{ vars.CF_DIST_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Debug OIDC token (sub/aud)
        uses: actions/github-script@v7
        with:
          script: |
            const token = await core.getIDToken('sts.amazonaws.com');
            const body = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString('utf8'));
            core.info(`OIDC aud: ${JSON.stringify(body.aud)}`);
            core.info(`OIDC sub: ${body.sub}`);

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: lifebook-site-deploy

      - name: Verify inputs
        run: |
          test -n "${{ env.CF_DIST_ID }}" || (echo "Missing repo var CF_DIST_ID"; exit 1)
          test -n "${{ env.S3_BUCKET }}" || (echo "Missing env S3_BUCKET"; exit 1)

      - name: Sync assets (immutable)
        run: |
          aws s3 cp site/ s3://${S3_BUCKET}/ --recursive \
            --exclude "*" --include "*.css" --include "*.js" --include "*.mjs" --include "*.map" \
            --include "*.svg" --include "*.png" --include "*.jpg" --include "*.jpeg" --include "*.webp" --include "*.gif" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable"
          aws s3 cp site/ s3://${S3_BUCKET}/ --recursive \
            --exclude "*" --include "assets/*" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable"

      - name: Upload HTML (no-store)
        shell: bash
        run: |
          if [ -f "site/index.html" ]; then
            aws s3 cp site/index.html s3://${S3_BUCKET}/index.html \
              --content-type "text/html; charset=utf-8" \
              --metadata-directive REPLACE \
              --cache-control "no-store"
          fi
          mapfile -t files < <(find site -type f -name "*.html" ! -name "index.html")
          for f in "${files[@]}"; do
            rel="${f#site/}"
            aws s3 cp "$f" "s3://${S3_BUCKET}/${rel}" \
              --content-type "text/html; charset=utf-8" \
              --metadata-directive REPLACE \
              --cache-control "no-store"
          done

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CF_DIST_ID}" \
            --paths "/index.html" "/"



